package com.mygdx.gorobots.pantallas;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer;
import com.badlogic.gdx.maps.tiled.TiledMap;
import com.badlogic.gdx.maps.tiled.TmxMapLoader;
import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer;
import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.physics.box2d.Box2DDebugRenderer;
import com.badlogic.gdx.physics.box2d.World;
import com.badlogic.gdx.utils.viewport.FitViewport;
import com.badlogic.gdx.utils.viewport.Viewport;
import com.mygdx.gorobots.elementos.MundoBox2D;
import com.mygdx.gorobots.sprites.Robot;
import com.mygdx.gorobots.utiles.Config;
import com.mygdx.gorobots.utiles.Recursos;
import com.mygdx.gorobots.utiles.Render;

public class PantallaNivel implements Screen{
	
	private OrthographicCamera camara;
	private Viewport ventanaJuego;
	
	//VARIABLES PARA EL MAPA
	private TmxMapLoader cargaMapa; //CARGAR MAPA EN EL JUEGO
	private TiledMap mapa;				//REFERENCIA AL MAPA EN SI
	private OrthogonalTiledMapRenderer renderizador; //MOSTRAR EL MAPA

	//VARIABLES PARA EL MUNDO BOX2D
	private World mundo;
	private Box2DDebugRenderer b2dr; //NOS BRINDA LA REPRESENTACION GRAFICA DE LOS CUERPOS DENTRO DEL MUNDO
	
	//CREACION DEL MUNDO A PARTIR DE UNA CLASE
	private MundoBox2D mundoBox2D;
	
	//DECLARACIÓN DEL JUGADOR
	private Robot jugador1;
	
	//HERRAMIENTAS EXTRAS
	ShapeRenderer sr;		//DIBUJA FORMAS GEOMETRICAS BASICAS
	SpriteBatch b;			//DIBUJAR SPRITES
	
	
	

	@Override
	public void show() {
		Render.pantallaNivel = this;
	
		//CREACION DE CAMARA Y CONFIGURACION DE LA VISTA 
		camara = new OrthographicCamera();
		ventanaJuego = new FitViewport(Config.ANCHO / Config.PPM, Config.ALTO / Config.PPM, camara);
		
		//CARGA DEL MAPA Y CONFIGURACION DE SU RENDERIZADO
		cargaMapa = new TmxMapLoader();
		mapa = cargaMapa.load(Recursos.MAPA_NIVEL);
		renderizador = new OrthogonalTiledMapRenderer(mapa, 1 / Config.PPM);
		
		camara.position.set(ventanaJuego.getWorldWidth() / 2, ventanaJuego.getWorldHeight() / 2, 0);
		
		//CONFIGURACION DEL MUNDO BOX2D
		mundo = new World(new Vector2(0, -10), true); //INVESTIGAR PARA QUE SIRVER EL VECTOR2 (PARA LA GRAVEDAD) A PROFUNDIDAD
		b2dr = new Box2DDebugRenderer();
		
		//CREACION DE LAS FIGURAS DEL MUNDO BOX2D
		mundoBox2D = new MundoBox2D(mundo, mapa);
		

		
		
	}
	
	@Override
	public void render(float delta) {
	
		update(delta);
		Render.LimpiarPantalla();
		renderizador.render();
		
		//RENDER DEL BOX2D
		b2dr.render(mundo, camara.combined);
		
		
	}
	
	public void update(float dt) {
		
		manejarEntrada(dt);
		mundo.step(1/60f, 6, 2);			//investigar temas de velocidad y tiempos

		camara.update();
		renderizador.setView(camara);
		
	}

	private void manejarEntrada(float dt) {
		if(Gdx.input.isTouched()) {
			camara.position.x += 5 * dt;
		}
		
	}


	@Override
	public void resize(int width, int height) {
		//ACTUALIZAR EL TAMAÑO DE LA VENTANA DE JUEGO
		ventanaJuego.update(width, height);
	}

	@Override
	public void pause() {
		
	}

	@Override
	public void resume() {
		
	}

	@Override
	public void hide() {
		
	}

	@Override
	public void dispose() {
		mapa.dispose();
		renderizador.dispose();
		mundo.dispose();
		b2dr.dispose();
		
		
	}

}
