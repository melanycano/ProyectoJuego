package com.mygdx.gorobots.sprites;

import com.badlogic.gdx.graphics.g2d.Animation;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.physics.box2d.Body;
import com.badlogic.gdx.physics.box2d.BodyDef;
import com.badlogic.gdx.physics.box2d.CircleShape;
import com.badlogic.gdx.physics.box2d.FixtureDef;
import com.badlogic.gdx.physics.box2d.World;
import com.badlogic.gdx.utils.Array;
import com.mygdx.gorobots.utiles.Config;
import com.mygdx.gorobots.utiles.Recursos;
import com.mygdx.gorobots.utiles.Render;

public class Robot extends Sprite{
	
	
	public World mundo;
	public Body cuerpo;
	
	//VARIABLE DONDE ALMACENAREMOS EL CONJUTO DE SPRITES
	private TextureRegion robotQuieto;
	
	//ENUMERADOAR PARA LOS ESTADOS DEL ROBOT
	public EstadosRobot estadoActual;
	public EstadosRobot estadoAnterior;
	
	//ANIMACIONES PARA LOS MOVIMIENTOS DEL ROBOT
	private Animation robotAndando;
	private Animation robotSaltando;
	private float tiempoEstado = 0;
	private boolean porDerecha = true;
	
	
	
	public Robot (World mundo, int nroJugador) {
		
		super(Render.pantallaNivel.getAtlas().findRegion(Recursos.SPRITE_ROBOT_1));
		
		this.mundo = mundo;
		estadoActual = EstadosRobot.QUIETO;
		estadoAnterior = EstadosRobot.QUIETO;
		
		if (nroJugador == 1) {
			 
			//ANIMACION ANDANDO
			Array<TextureRegion> frames = new Array <TextureRegion>();		//ARRAY PARA ALMACENAR LAS TEXTURAS/SPRITES
			
			TextureRegion frame1 = new TextureRegion(getTexture(), 1, 151, 180, 150); 	//robot_redDrive1
			TextureRegion frame2 = new TextureRegion(getTexture(), 199, 319, 180, 146);	//robot_redDrive2
			
			frames.add(frame1);
			frames.add(frame2);
			
			robotAndando = new Animation<>(0.1f, frames, Animation.PlayMode.LOOP);
			frames.clear();
			
			//ANIMACION SALTANDO
			TextureRegion frame4 = new TextureRegion(getTexture(), 1, 303, 196, 162);	//robot_redJump
		}
		
		
		
		robotQuieto = new TextureRegion(getTexture(), 1, 151, 180, 150);
		estructuraRobot();
		setBounds(1 / Config.PPM, 151 / Config.PPM, 180 / Config.PPM, 150 / Config.PPM);
		setRegion(robotQuieto);
		setSize(0.50f,0.40f);

		
		
		
	}

	private void estructuraRobot() {
		BodyDef bd = new BodyDef();
		bd.position.set(5 / Config.PPM, 100 / Config.PPM); // 5, 100
		bd.type = BodyDef.BodyType.DynamicBody;
		cuerpo = mundo.createBody(bd);
		
		FixtureDef fd = new FixtureDef();
		
		CircleShape shape = new CircleShape();
		shape.setRadius(20 / Config.PPM);
		
		fd.shape = shape;
		cuerpo.createFixture(fd);
		
		
	}
	
	public void update (float d) {
		setPosition(cuerpo.getPosition().x - getWidth() / 2, cuerpo.getPosition().y - getHeight() / 2);
	}

}
